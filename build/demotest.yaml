apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  annotations:
    service.protal.kubernetes.io/access-ip: {{dnatip}}:{{port}}
    service.protal.kubernetes.io/type: NatGateway
  labels:
    appgroup: ""
  name: {{servername}}
  namespace: default
spec:
  progressDeadlineSeconds: 600
  replicas: 1
  revisionHistoryLimit: 10
  selector:
    matchLabels:
      app: {{servername}}
  strategy:
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0
    type: RollingUpdate
  template:
    metadata:
      labels:
        app: {{servername}}
    spec:
      affinity: {}
      containers:
      - env:
        - name: servername
          value: {{servername}}
        - name: serveraddr
          value: {{dnatip}}:{{port}}
        - name: mysqluser
          value: root
        - name: mysqlpwd
          value: Cloud@123
        - name: mysqlurl
          value: rds.mysql.com:8635
        - name: registerurl
          value: http://demomgr.default.svc.cluster.local:8087
        - name: database
          value: game
        image: 100.125.0.198:20202/cce-demo/demotest:latest
        imagePullPolicy: Always
        name: container-0
        resources:
          limits:
            cpu: 300m
            memory: 100Mi
          requests:
            cpu: 300m
            memory: 100Mi
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: File
        volumeMounts:
        - mountPath: /root/file
          name: {{sfsname}}
      dnsPolicy: ClusterFirst
      imagePullSecrets:
      - name: default-secret
      restartPolicy: Always
      schedulerName: default-scheduler
      securityContext: {}
      terminationGracePeriodSeconds: 30
      volumes:
      - name: {{sfsname}}
        persistentVolumeClaim:
          claimName: {{sfsname}}
---
apiVersion: v1
kind: Service
metadata:
  name: {{servername}}-nodeport
  labels:
    app: {{servername}}
  annotations:
    service.protal.kubernetes.io/type: NodePort
spec:
  selector:
    app: {{servername}}
  ports:
  - name: service0
    targetPort: 8088
    nodePort: {{port}}
    port: 8088
    protocol: TCP
  type: NodePort
---
apiVersion: v1
kind: Service
metadata:
  name: {{servername}}-nat
  labels:
    app: {{servername}}
  annotations:
    service.protal.kubernetes.io/type: NatGateway
    service.protal.kubernetes.io/access-ip: {{dnatip}}:{{port}}
    kubernetes.io/elb.class: dnat
    kubernetes.io/natgateway.id: {{dnatid}}
spec:
  selector:
    app: {{servername}}
  ports:
  - name: service0
    targetPort: 8088
    nodePort: 0
    port: {{port}}
    protocol: TCP
  type: LoadBalancer
  loadBalancerIP: {{dnatip}}